"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionRouter = void 0;
const express_1 = require("express");
const transaction_controller_1 = require("./transaction.controller");
const authCheck_1 = require("../../middlewares/authCheck");
const user_interface_1 = require("../user/user.interface");
const validateRequest_1 = require("../../middlewares/validateRequest");
const transaction_validation_1 = require("./transaction.validation");
const router = (0, express_1.Router)();
router.get('/', (0, authCheck_1.authCheck)(...Object.values(user_interface_1.IRole)), transaction_controller_1.TransactionControllers.getAllTransactions);
router.post('/add-money', (0, authCheck_1.authCheck)(user_interface_1.IRole.USER), (0, validateRequest_1.validateRequest)(transaction_validation_1.createTransactionZodSchema), transaction_controller_1.TransactionControllers.addMoney);
router.post('/withdraw', (0, authCheck_1.authCheck)(user_interface_1.IRole.USER), (0, validateRequest_1.validateRequest)(transaction_validation_1.createTransactionZodSchema), transaction_controller_1.TransactionControllers.withdrawMoney);
router.post('/cash-in', (0, authCheck_1.authCheck)(user_interface_1.IRole.AGENT), (0, validateRequest_1.validateRequest)(transaction_validation_1.createTransactionZodSchema), transaction_controller_1.TransactionControllers.cashIn);
router.post('/send-money', (0, authCheck_1.authCheck)(user_interface_1.IRole.USER, user_interface_1.IRole.AGENT), (0, validateRequest_1.validateRequest)(transaction_validation_1.createTransactionZodSchema), transaction_controller_1.TransactionControllers.sendMoney);
router.get('/summary', (0, authCheck_1.authCheck)(user_interface_1.IRole.AGENT, user_interface_1.IRole.USER), transaction_controller_1.TransactionControllers.getSummary);
router.get('/admin/summary', (0, authCheck_1.authCheck)(user_interface_1.IRole.ADMIN, user_interface_1.IRole.SUPER_ADMIN), transaction_controller_1.TransactionControllers.getAdminSummary);
router.post('/refund/:id', (0, authCheck_1.authCheck)(user_interface_1.IRole.ADMIN, user_interface_1.IRole.SUPER_ADMIN), transaction_controller_1.TransactionControllers.refund);
router.post('/add-money-confirm/:id', (0, authCheck_1.authCheck)(user_interface_1.IRole.AGENT), transaction_controller_1.TransactionControllers.addMoneyConfirm);
router.get('/:id', (0, authCheck_1.authCheck)(...Object.values(user_interface_1.IRole)), transaction_controller_1.TransactionControllers.getSingleTransaction);
exports.TransactionRouter = router;
